// Grid system
//
// Generate semantic grid columns with these mixins.

// Centered container element
@mixin container-fixed($gutter: $grid-gutter-width) {
  margin-#{$dir-mode-align-inverse}: auto;
  margin-#{$dir-mode-align}: auto;
  padding-#{$dir-mode-align}:  floor(($gutter / 2));
  padding-#{$dir-mode-align-inverse}: ceil(($gutter / 2));
  @include clearfix;
}

// Creates a wrapper for a series of columns
@mixin make-row($gutter: $grid-gutter-width) {
  margin-#{$dir-mode-align}:  ceil(($gutter / -2));
  margin-#{$dir-mode-align-inverse}: floor(($gutter / -2));
  @include clearfix;
}

// Generate the extra small columns
@mixin make-xs-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  float: $dir-mode-align;
  width: percentage(($columns / $grid-columns));
  min-height: 1px;
  padding-#{$dir-mode-align}:  ($gutter / 2);
  padding-#{$dir-mode-align-inverse}: ($gutter / 2);
}
@mixin make-xs-column-offset($columns) {
  margin-#{$dir-mode-align}: percentage(($columns / $grid-columns));
}
@mixin make-xs-column-push($columns) {
  #{$dir-mode-align}: percentage(($columns / $grid-columns));
}
@mixin make-xs-column-pull($columns) {
  #{$dir-mode-align-inverse}: percentage(($columns / $grid-columns));
}

// Generate the small columns
@mixin make-sm-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-#{$dir-mode-align}:  ($gutter / 2);
  padding-#{$dir-mode-align-inverse}: ($gutter / 2);

  @media (min-width: $screen-sm-min) {
    float: $dir-mode-align;
    width: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-offset($columns) {
  @media (min-width: $screen-sm-min) {
    margin-#{$dir-mode-align}: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-push($columns) {
  @media (min-width: $screen-sm-min) {
    #{$dir-mode-align}: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-pull($columns) {
  @media (min-width: $screen-sm-min) {
    #{$dir-mode-align-inverse}: percentage(($columns / $grid-columns));
  }
}

// Generate the medium columns
@mixin make-md-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-#{$dir-mode-align}:  ($gutter / 2);
  padding-#{$dir-mode-align-inverse}: ($gutter / 2);

  @media (min-width: $screen-md-min) {
    float: $dir-mode-align;
    width: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-offset($columns) {
  @media (min-width: $screen-md-min) {
    margin-#{$dir-mode-align}: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-push($columns) {
  @media (min-width: $screen-md-min) {
    #{$dir-mode-align}: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-pull($columns) {
  @media (min-width: $screen-md-min) {
    #{$dir-mode-align-inverse}: percentage(($columns / $grid-columns));
  }
}

// Generate the large columns
@mixin make-lg-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-#{$dir-mode-align}:  ($gutter / 2);
  padding-#{$dir-mode-align-inverse}: ($gutter / 2);

  @media (min-width: $screen-lg-min) {
    float: $dir-mode-align;
    width: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-offset($columns) {
  @media (min-width: $screen-lg-min) {
    margin-#{$dir-mode-align}: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-push($columns) {
  @media (min-width: $screen-lg-min) {
    #{$dir-mode-align}: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-pull($columns) {
  @media (min-width: $screen-lg-min) {
    #{$dir-mode-align-inverse}: percentage(($columns / $grid-columns));
  }
}
